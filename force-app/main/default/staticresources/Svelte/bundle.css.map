{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../../../../svelte/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\t// imports\n\timport ContactList from './ContactList.svelte';\n\timport ContactListStore from './ContactListStore.svelte';\n\n\t// import data stores\n\timport { storeContacts } from './Stores.js';\n\t\n\t// props\n\texport let name = '🍕';\n\texport let getContacts;\n\texport let updateContactToPizza;\n\tlet contacts = [];\n\n\t// functions\n\tlet handleClick = event => {\n\t\tgetContacts()\n\t\t\t.then(result => {\n\t\t\t\tcontacts = result;\n\n\t\t\t\t// we can also update the store's version of this too!\n\t\t\t\tstoreContacts.set(result);\n\t\t\t})\n\t\t\t.catch(error => console.error(error))\n\t}\n\n\tlet handleNameToPizza = event => {\n\t\tlet contactId = event.detail.id;\n\t\tupdateContactToPizza({ contactId })\n\t\t\t.then(result => {\n\t\t\t\tlet pizzaContactIndex = contacts.findIndex(contact => contact.Id === contactId);\n\t\t\t\tlet pizzaContact = Object.assign({}, contacts[pizzaContactIndex]);\n\t\t\t\tpizzaContact.Name = '🍕 🍕';\n\t\t\t\tcontacts[pizzaContactIndex] = pizzaContact;\n\t\t\t})\n\t\t\t.catch(error => console.error(error))\n\t}\n\n\t/*\n\t\tit seems like we can't make use of dispatch to publish\n\t\tcustom  events from child components and handle those\n\t\tevents with callback functions on the parent components\n\n\t\tso, as an LWC / Locker Service workaround, pass a function\n\t\tdown from the parent component that acts as a broker\n\t\tservice to pass events to the appropriate callbacks\n\t*/\n\tlet eventBroker = event => {\n\t\tswitch(event.name) {\n\t\t\tcase 'changeNameToPizza': \n\t\t\t\thandleNameToPizza(event);\n\t\t\t\tbreak;\n\t\t}\n\t}\n</script>\n\n<main>\n\t<h1>Hello {name}!</h1>\n\t<button class=\"slds-button slds-button--brand\" on:click={handleClick}>\n\t\tGet Contacts\n\t</button>\n\t<div style=\"display: grid; grid-template-columns: 1fr 1fr 1fr;\">\n\t\t<div>\n\t\t\t<h2>We can pass the contacts as a prop from parent to child...</h2>\n\t\t\t<ContactList {contacts} {eventBroker} />\n\t\t</div>\n\t\t<div>\n\t\t\t<h2>...or as a reference to the store's version of contacts...</h2>\n\t\t\t<ContactList contacts={$storeContacts} {eventBroker} />\n\t\t</div>\n\t\t<div>\n\t\t\t<h2>...or the child component can just reference the store itself!</h2>\n\t\t\t<ContactListStore />\n\t\t</div>\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tmargin: 0 auto;\n\t\tpadding: var(--lwc-varSpacingVerticalMedium,1rem) var(--lwc-varSpacingHorizontalMedium,1rem);\n    border-bottom: var(--lwc-borderWidthThin,1px) solid var(--lwc-pageHeaderColorBorder,rgb(221, 219, 218));\n    border-radius: var(--lwc-pageHeaderBorderRadius,0.25rem);\n    background: var(--lwc-pageHeaderColorBackground,rgb(243, 242, 242));\n    background-clip: padding-box;\n    box-shadow: var(--lwc-pageHeaderShadow,0 2px 2px 0 rgba(0, 0, 0, 0.10));\n    border: var(--lwc-borderWidthThin,1px) solid var(--lwc-pageHeaderColorBorder,rgb(221, 219, 218));\n\t}\n\n\tmain h1 {\n\t\tfont-size: 2rem;\n\t}\n\n\tmain h2 {\n\t\tfont-size: 1.5rem;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AA8EC,IAAI,8BAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,8BAA8B,CAAC,IAAI,CAAC,CAAC,IAAI,gCAAgC,CAAC,IAAI,CAAC,CAC1F,aAAa,CAAE,IAAI,qBAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,2BAA2B,CAAC,kBAAkB,CAAC,CACvG,aAAa,CAAE,IAAI,4BAA4B,CAAC,OAAO,CAAC,CACxD,UAAU,CAAE,IAAI,+BAA+B,CAAC,kBAAkB,CAAC,CACnE,eAAe,CAAE,WAAW,CAC5B,UAAU,CAAE,IAAI,sBAAsB,CAAC,+BAA+B,CAAC,CACvE,MAAM,CAAE,IAAI,qBAAqB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,2BAA2B,CAAC,kBAAkB,CAAC,AACnG,CAAC,AAED,mBAAI,CAAC,EAAE,eAAC,CAAC,AACR,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,mBAAI,CAAC,EAAE,eAAC,CAAC,AACR,SAAS,CAAE,MAAM,AAClB,CAAC"
}